buildscript {
    dependencies { classpath files('lib/build/clojuresque-1.4.1.jar',
                                   'lib/build/runtime-1.4.1.jar') }
}

subprojects {

    version = "0.1.0"

    repositories {
        flatDir dirs: project(':').file('lib/compile').absoluteFile
        flatDir dirs: project(':').file('lib/runtime').absoluteFile
        flatDir dirs: project(':').file('lib/build').absoluteFile
    }
}

project(':active_papers') {

    apply plugin: "java"
    apply plugin: "clojure"

    compileClojure.dependsOn compileJava
    aotCompile = true

    dependencies {
        compile ":clojure:1.2.1"
        compile ":clojure-contrib:1.2.0"
        compile ":clj-hdf5:0.1"
        compile ":jhdf5:11.05.2"
    }

    jar {
       include "active_papers/**"
       include "active_paper_runtime/**"
    }
}

project(':active_paper_cltool') {

    apply plugin: "clojure"

    aotCompile = true
    configurations.compile.transitive = true
    uberjar.enabled = true

    dependencies {
        compile project(':active_papers')
        runtime ":swank-clojure:1.4.0-SNAPSHOT"
    }

    jar {
       include "active_papers/cltool*"
       include "active_papers/cltool/**"
    }

    uberjar {
       manifest {
          attributes('Main-Class': 'active_papers.cltool')
       }
    }
}

project(':language_support/clojure_runtime') {

    apply plugin: "java"
    apply plugin: "clojure"

    dependencies {
        compile project(':active_papers')
    }

    jar {
       include "clojure/launcher.class"
       include "active_paper_clojure_runtime/**"
    }
}

project(':language_support/jython_runtime') {

    apply plugin: "java"

    jar {
        archiveName = "jython-2.5.2_with_runtime.jar"
        into('Lib') {
           from fileTree('Lib').include('**/*.py')
        }
        from zipTree(project(':').file('lib/support/jython-2.5.2.jar').absoluteFile)
    }
}

project(':language_support/jython_plotting') {

    apply plugin: "java"

    jar {
        archiveName = "jython-plotting.jar"
        into('Lib') {
           from fileTree('Lib').include('**/*.py')
        }
    }
}

